definitions:
  handler.createOrgRequest:
    properties:
      name:
        type: string
    type: object
  handler.createTxDto:
    properties:
      op_code:
        type: integer
      payload:
        type: string
    type: object
  handler.createWorkgroupMemberRequest:
    properties:
      organization_endpoint:
        type: string
      organization_id:
        type: string
      organization_token:
        type: string
    type: object
  handler.createWorkgroupRequest:
    properties:
      name:
        type: string
      privatize_key:
        type: string
    type: object
  handler.latestTrustmeshEntryDto:
    properties:
      approved:
        type: boolean
      baseledger_business_object_id:
        type: string
      business_object_json_payload:
        type: string
      workflow_id:
        description: Id of the trustmesh
        type: string
      workstep_id:
        description: Id of the latest trustmesh entry id
        type: string
      workstep_type:
        type: string
    type: object
  handler.newWorkflowDto:
    properties:
      baseledger_business_object_id:
        type: string
      business_object_json_payload:
        type: string
      workflow_id:
        description: Id of the trustmesh
        type: string
      workstep_id:
        description: Id of the latest trustmesh entry id
        type: string
      workstep_type:
        type: string
    type: object
  handler.orgDetailsDto:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  handler.sendFeedbackDto:
    properties:
      approved:
        type: boolean
      baseledger_business_object_id:
        type: string
      feedback_message:
        type: string
      workflow_id:
        type: string
    type: object
  handler.sendSuggestionDto:
    properties:
      baseledger_business_object_id:
        type: string
      business_object_id:
        type: string
      business_object_json:
        type: string
      business_object_type:
        type: string
      knowledge_limiters:
        items:
          type: string
        type: array
      recipient:
        type: string
      workflow_id:
        type: string
      workgroup_id:
        type: string
      workstep_type:
        type: string
    type: object
  handler.sunburstItem:
    properties:
      children:
        items:
          $ref: '#/definitions/handler.sunburstItem'
        type: array
      name:
        type: string
      value:
        type: integer
    type: object
  handler.syncTreeSunburst:
    properties:
      items:
        items:
          $ref: '#/definitions/handler.sunburstItem'
        type: array
      levels:
        type: number
    type: object
  handler.trustmeshDto:
    properties:
      businessObjectTypes:
        type: string
      containsRejections:
        type: boolean
      createdAt:
        type: string
      endTime:
        type: string
      entries:
        items:
          $ref: '#/definitions/handler.trustmeshEntryDto'
        type: array
      finalized:
        type: boolean
      id:
        type: string
      participants:
        type: string
      startTime:
        type: string
    type: object
  handler.trustmeshEntryDto:
    properties:
      baseledgerBusinessObjectId:
        type: string
      baseledgerTransactionId:
        type: string
      baseledgerTransactionType:
        type: string
      businessObjectType:
        type: string
      commitmentState:
        type: string
      entryType:
        type: string
      id:
        type: string
      offchainProcessMessageId:
        type: string
      receiverOrgId:
        type: string
      receiverOrgName:
        type: string
      referencedBaseledgerBusinessObjectId:
        type: string
      referencedBaseledgerTransactionId:
        type: string
      senderOrgId:
        type: string
      senderOrgName:
        type: string
      tendermintBlockId:
        type: string
      tendermintTransactionId:
        type: string
      tendermintTransactionTimestamp:
        type: string
      transactionHash:
        type: string
      trustmeshId:
        type: string
      workgroupId:
        type: string
      workgroupName:
        type: string
      workstepType:
        type: string
    type: object
  handler.userDto:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.workgroupDetailsDto:
    properties:
      id:
        type: string
      key:
        type: string
      name:
        type: string
    type: object
  handler.workgroupMemberDetailsDto:
    properties:
      id:
        type: string
      organization_endpoint:
        type: string
      organization_id:
        type: string
      organization_token:
        type: string
      workgroup_id:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  title: Baseledger Proxy API documentation
  version: 1.0.0
paths:
  /dev/auth:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.userDto'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login user
      tags:
      - Dev
  /dev/tx:
    post:
      consumes:
      - application/json
      description: generate transaction with custom payload
      parameters:
      - description: Transaction payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.createTxDto'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Generate transaction with custom payload
      tags:
      - Dev
  /dev/users:
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.userDto'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register user
      tags:
      - Dev
  /feedback:
    post:
      consumes:
      - application/json
      description: Create new feedback
      parameters:
      - description: Feedback Request
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/handler.sendFeedbackDto'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new feedback based on parameters
      tags:
      - Feedbacks
  /organization:
    get:
      description: get all organizations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.orgDetailsDto'
            type: array
      security:
      - BasicAuth: []
      summary: Get all organizations
      tags:
      - Organizations
    post:
      consumes:
      - application/json
      description: Create new organization
      parameters:
      - description: Organization Request
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/handler.createOrgRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new organization based on parameters
      tags:
      - Organizations
  /organization/{id}:
    delete:
      description: Delete organization
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete organization
      tags:
      - Organizations
  /sorwebhook:
    get:
      consumes:
      - application/json
      description: get sor webhooks
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.workgroupMemberDetailsDto'
            type: array
      security:
      - BasicAuth: []
      summary: Get sor webhooks
      tags:
      - SOR Webhooks
    post:
      consumes:
      - application/json
      description: Create new SOR webhook
      parameters:
      - description: Create SOR webhook
        in: body
        name: sorWebhook
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new SOR webhook based on parameters
      tags:
      - SOR Webhook
  /sorwebhook/{id}:
    delete:
      description: Delete sorWebhook member
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete sorWebhook member
      tags:
      - SorWebhook Members
  /suggestion:
    post:
      consumes:
      - application/json
      description: Create new suggestion
      parameters:
      - description: Suggestion Request
        in: body
        name: suggestion
        required: true
        schema:
          $ref: '#/definitions/handler.sendSuggestionDto'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new suggestion based on parameters
      tags:
      - Suggestions
  /sunburst/{txId}:
    get:
      description: get data for sunburst chart
      parameters:
      - description: uuid
        in: path
        name: txId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.syncTreeSunburst'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get data for sunburst chart
      tags:
      - Sunbursts
  /trustmeshes:
    get:
      description: get all trustmeshes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.trustmeshDto'
            type: array
      security:
      - BasicAuth: []
      summary: Get all trustmeshes
      tags:
      - Trustmeshes
  /trustmeshes/{id}:
    get:
      description: get single trustmesh
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.trustmeshDto'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get single trustmesh
      tags:
      - Trustmesh
  /workflow/latestState/{bo_id}:
    get:
      description: get latest trustmesh entry for a specific baseledger_business_object_id
      parameters:
      - description: uuid
        in: path
        name: bo_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.latestTrustmeshEntryDto'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get latest trustmesh entry for a specific baseledger_business_object_id
      tags:
      - Workflow
  /workflow/new:
    get:
      description: get trustmesh entries where suggestion received is the latest state
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.newWorkflowDto'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get trustmesh entries where suggestion received is the latest state
      tags:
      - Workflow
  /workgroup:
    get:
      description: get all workgroups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.workgroupDetailsDto'
            type: array
      security:
      - BasicAuth: []
      summary: Get all workgroups
      tags:
      - Workgroups
    post:
      consumes:
      - application/json
      description: Create new workgroup
      parameters:
      - description: Workgroup Request
        in: body
        name: workgroup
        required: true
        schema:
          $ref: '#/definitions/handler.createWorkgroupRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new workgroup based on parameters
      tags:
      - Workgroups
  /workgroup/{id}:
    delete:
      description: Delete workgroup
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete workgroup
      tags:
      - Workgroups
  /workgroup/{id}/participation:
    get:
      consumes:
      - application/json
      description: get workgroup members
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.workgroupMemberDetailsDto'
            type: array
      security:
      - BasicAuth: []
      summary: Get workgroup members
      tags:
      - Workgroup Members
    post:
      consumes:
      - application/json
      description: Create new workgroup member
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      - description: Workgroup Member Request
        in: body
        name: workgroupMember
        required: true
        schema:
          $ref: '#/definitions/handler.createWorkgroupMemberRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new workgroup member based on parameters
      tags:
      - Workgroup Members
  /workgroup/{id}/participation/{participationId}:
    delete:
      description: Delete workgroup member
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      - description: uuid
        in: path
        name: participationId
        type: string
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Delete workgroup member
      tags:
      - Workgroup Members
securityDefinitions:
  BasicAuth:
    type: basic
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
