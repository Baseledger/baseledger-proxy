definitions:
  handler.createSuggestionRequest:
    properties:
      baseledger_business_object_id:
        type: string
      business_object_json:
        type: string
      business_object_type:
        type: string
      knowledge_limiters:
        items:
          type: string
        type: array
      recipient:
        type: string
      referenced_baseledger_business_object_id:
        type: string
      referenced_baseledger_transaction_id:
        type: string
      sor_message_id:
        type: string
      workgroup_id:
        type: string
      workstep_type:
        type: string
    type: object
  handler.createSynchronizationFeedbackRequest:
    properties:
      approved:
        type: boolean
      baseledger_business_object_id_of_approved_object:
        type: string
      business_object_type:
        type: string
      feedback_message:
        type: string
      original_baseledger_transaction_id:
        type: string
      original_offchain_process_message_id:
        type: string
      recipient:
        type: string
      workgroup_id:
        type: string
    type: object
  handler.sunburstItem:
    properties:
      children:
        items:
          $ref: '#/definitions/handler.sunburstItem'
        type: array
      name:
        type: string
      value:
        type: integer
    type: object
  handler.syncTreeSunburst:
    properties:
      items:
        items:
          $ref: '#/definitions/handler.sunburstItem'
        type: array
      levels:
        type: number
    type: object
  handler.trustmeshDto:
    properties:
      businessObjectTypes:
        type: string
      containsRejections:
        type: boolean
      createdAt:
        type: string
      endTime:
        type: string
      entries:
        items:
          $ref: '#/definitions/handler.trustmeshEntryDto'
        type: array
      finalized:
        type: boolean
      id:
        type: string
      participants:
        type: string
      startTime:
        type: string
    type: object
  handler.trustmeshEntryDto:
    properties:
      baseledgerBusinessObjectId:
        type: string
      baseledgerTransactionId:
        type: string
      baseledgerTransactionType:
        type: string
      businessObjectType:
        type: string
      commitmentState:
        type: string
      entryType:
        type: string
      offchainProcessMessageId:
        type: string
      receiverOrgId:
        type: string
      receiverOrgName:
        type: string
      referencedBaseledgerBusinessObjectId:
        type: string
      referencedBaseledgerTransactionId:
        type: string
      referencedProcessMessageId:
        type: string
      senderOrgId:
        type: string
      senderOrgName:
        type: string
      tendermintBlockId:
        type: string
      tendermintTransactionId:
        type: string
      tendermintTransactionTimestamp:
        type: string
      transactionHash:
        type: string
      trustmeshId:
        type: string
      workgroupId:
        type: string
      workgroupName:
        type: string
      workstepType:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  title: Baseledger Proxy API documentation
  version: 1.0.0
paths:
  /feedback:
    post:
      consumes:
      - application/json
      description: Create new feedback
      parameters:
      - description: Feedback Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.createSynchronizationFeedbackRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new feedback based on parameters
      tags:
      - Feedbacks
  /suggestion:
    post:
      consumes:
      - application/json
      description: Create new suggestion
      parameters:
      - description: Suggestion Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.createSuggestionRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Create new suggestion based on parameters
      tags:
      - Suggestions
  /sunburst/{txId}:
    get:
      description: get data for sunburst chart
      parameters:
      - description: uuid
        in: path
        name: txId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.syncTreeSunburst'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get data for sunburst chart
      tags:
      - Sunbursts
  /trustmeshes:
    get:
      description: get all trustmeshes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.trustmeshDto'
            type: array
      security:
      - BasicAuth: []
      summary: Get all trustmeshes
      tags:
      - Trustmeshes
  /trustmeshes/{id}:
    get:
      description: get single trustmesh
      parameters:
      - description: uuid
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.trustmeshDto'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get single trustmesh
      tags:
      - Trustmesh
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
