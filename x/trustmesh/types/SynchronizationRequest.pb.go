// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: trustmesh/SynchronizationRequest.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SynchronizationRequest struct {
	Creator                              string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                                   uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	WorkgroupID                          string `protobuf:"bytes,3,opt,name=WorkgroupID,proto3" json:"WorkgroupID,omitempty"`
	Recipient                            string `protobuf:"bytes,4,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	WorkstepType                         string `protobuf:"bytes,5,opt,name=WorkstepType,proto3" json:"WorkstepType,omitempty"`
	BusinessObjectType                   string `protobuf:"bytes,6,opt,name=BusinessObjectType,proto3" json:"BusinessObjectType,omitempty"`
	BaseledgerBusinessObjectID           string `protobuf:"bytes,7,opt,name=BaseledgerBusinessObjectID,proto3" json:"BaseledgerBusinessObjectID,omitempty"`
	BusinessObject                       string `protobuf:"bytes,8,opt,name=BusinessObject,proto3" json:"BusinessObject,omitempty"`
	ReferencedBaseledgerBusinessObjectID string `protobuf:"bytes,9,opt,name=ReferencedBaseledgerBusinessObjectID,proto3" json:"ReferencedBaseledgerBusinessObjectID,omitempty"`
}

func (m *SynchronizationRequest) Reset()         { *m = SynchronizationRequest{} }
func (m *SynchronizationRequest) String() string { return proto.CompactTextString(m) }
func (*SynchronizationRequest) ProtoMessage()    {}
func (*SynchronizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9786fbb838e03ae5, []int{0}
}
func (m *SynchronizationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SynchronizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SynchronizationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SynchronizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynchronizationRequest.Merge(m, src)
}
func (m *SynchronizationRequest) XXX_Size() int {
	return m.Size()
}
func (m *SynchronizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SynchronizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SynchronizationRequest proto.InternalMessageInfo

func (m *SynchronizationRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *SynchronizationRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SynchronizationRequest) GetWorkgroupID() string {
	if m != nil {
		return m.WorkgroupID
	}
	return ""
}

func (m *SynchronizationRequest) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *SynchronizationRequest) GetWorkstepType() string {
	if m != nil {
		return m.WorkstepType
	}
	return ""
}

func (m *SynchronizationRequest) GetBusinessObjectType() string {
	if m != nil {
		return m.BusinessObjectType
	}
	return ""
}

func (m *SynchronizationRequest) GetBaseledgerBusinessObjectID() string {
	if m != nil {
		return m.BaseledgerBusinessObjectID
	}
	return ""
}

func (m *SynchronizationRequest) GetBusinessObject() string {
	if m != nil {
		return m.BusinessObject
	}
	return ""
}

func (m *SynchronizationRequest) GetReferencedBaseledgerBusinessObjectID() string {
	if m != nil {
		return m.ReferencedBaseledgerBusinessObjectID
	}
	return ""
}

func init() {
	proto.RegisterType((*SynchronizationRequest)(nil), "example.baseledger.trustmesh.SynchronizationRequest")
}

func init() {
	proto.RegisterFile("trustmesh/SynchronizationRequest.proto", fileDescriptor_9786fbb838e03ae5)
}

var fileDescriptor_9786fbb838e03ae5 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x31, 0x4f, 0x32, 0x31,
	0x18, 0xc7, 0x39, 0xe0, 0x85, 0x97, 0x6a, 0x18, 0x1a, 0x63, 0x1a, 0x42, 0x1a, 0x42, 0x0c, 0x61,
	0xba, 0x0e, 0xee, 0x0e, 0x84, 0x85, 0xc9, 0xa4, 0x9a, 0x98, 0xb8, 0xdd, 0xf5, 0x1e, 0x8f, 0x2a,
	0xb4, 0xb5, 0xed, 0x25, 0xe0, 0xa7, 0x30, 0x7e, 0x2a, 0x47, 0x46, 0x47, 0x03, 0x5f, 0xc4, 0x50,
	0x15, 0xc4, 0x10, 0xe2, 0xd6, 0xfe, 0x9f, 0xdf, 0xaf, 0x4d, 0xfa, 0x2f, 0xea, 0x79, 0x5b, 0x38,
	0x3f, 0x05, 0x37, 0x66, 0x57, 0x73, 0x25, 0xc6, 0x56, 0x2b, 0xf9, 0x94, 0x78, 0xa9, 0x15, 0x87,
	0xc7, 0x02, 0x9c, 0x8f, 0x8d, 0xd5, 0x5e, 0xe3, 0x36, 0xcc, 0x92, 0xa9, 0x99, 0x40, 0x9c, 0x26,
	0x0e, 0x26, 0x90, 0xe5, 0x60, 0xe3, 0x8d, 0xda, 0x3a, 0xc9, 0x75, 0xae, 0x03, 0xc8, 0xd6, 0xab,
	0x4f, 0xa7, 0xfb, 0x52, 0x41, 0xa7, 0xfb, 0x0f, 0xc5, 0x04, 0xd5, 0x85, 0x85, 0xc4, 0x6b, 0x4b,
	0xa2, 0x4e, 0xd4, 0x6f, 0xf0, 0xef, 0x2d, 0x6e, 0xa2, 0xb2, 0xcc, 0x48, 0xb9, 0x13, 0xf5, 0xab,
	0xbc, 0x2c, 0x33, 0xdc, 0x41, 0x47, 0x37, 0xda, 0x3e, 0xe4, 0x56, 0x17, 0x66, 0x34, 0x24, 0x95,
	0x40, 0xff, 0x8c, 0x70, 0x1b, 0x35, 0x38, 0x08, 0x69, 0x24, 0x28, 0x4f, 0xaa, 0x61, 0xbe, 0x0d,
	0x70, 0x17, 0x1d, 0xaf, 0x61, 0xe7, 0xc1, 0x5c, 0xcf, 0x0d, 0x90, 0x7f, 0x01, 0xd8, 0xc9, 0x70,
	0x8c, 0xf0, 0xa0, 0x70, 0x52, 0x81, 0x73, 0x97, 0xe9, 0x3d, 0x08, 0x1f, 0xc8, 0x5a, 0x20, 0xf7,
	0x4c, 0xf0, 0x05, 0x6a, 0x0d, 0x36, 0xcf, 0xb0, 0x3b, 0x1f, 0x0d, 0x49, 0x3d, 0x78, 0x07, 0x08,
	0xdc, 0x43, 0xcd, 0xdd, 0x8c, 0xfc, 0x0f, 0xce, 0xaf, 0x14, 0x73, 0x74, 0xc6, 0xe1, 0x0e, 0x2c,
	0x28, 0x01, 0xd9, 0x81, 0x1b, 0x1b, 0xc1, 0xfe, 0x13, 0x3b, 0x18, 0xbd, 0x2e, 0x69, 0xb4, 0x58,
	0xd2, 0xe8, 0x7d, 0x49, 0xa3, 0xe7, 0x15, 0x2d, 0x2d, 0x56, 0xb4, 0xf4, 0xb6, 0xa2, 0xa5, 0x5b,
	0x96, 0x4b, 0x3f, 0x2e, 0xd2, 0x58, 0xe8, 0x29, 0xfb, 0x6a, 0x9b, 0x6d, 0xdb, 0x66, 0x33, 0xb6,
	0xfd, 0x2a, 0x7e, 0x6e, 0xc0, 0xa5, 0xb5, 0x50, 0xf3, 0xf9, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xa8, 0xe3, 0xc0, 0x35, 0x44, 0x02, 0x00, 0x00,
}

func (m *SynchronizationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SynchronizationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SynchronizationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ReferencedBaseledgerBusinessObjectID) > 0 {
		i -= len(m.ReferencedBaseledgerBusinessObjectID)
		copy(dAtA[i:], m.ReferencedBaseledgerBusinessObjectID)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.ReferencedBaseledgerBusinessObjectID)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.BusinessObject) > 0 {
		i -= len(m.BusinessObject)
		copy(dAtA[i:], m.BusinessObject)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.BusinessObject)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.BaseledgerBusinessObjectID) > 0 {
		i -= len(m.BaseledgerBusinessObjectID)
		copy(dAtA[i:], m.BaseledgerBusinessObjectID)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.BaseledgerBusinessObjectID)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BusinessObjectType) > 0 {
		i -= len(m.BusinessObjectType)
		copy(dAtA[i:], m.BusinessObjectType)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.BusinessObjectType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.WorkstepType) > 0 {
		i -= len(m.WorkstepType)
		copy(dAtA[i:], m.WorkstepType)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.WorkstepType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WorkgroupID) > 0 {
		i -= len(m.WorkgroupID)
		copy(dAtA[i:], m.WorkgroupID)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.WorkgroupID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintSynchronizationRequest(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSynchronizationRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovSynchronizationRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SynchronizationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSynchronizationRequest(uint64(m.Id))
	}
	l = len(m.WorkgroupID)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	l = len(m.WorkstepType)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	l = len(m.BusinessObjectType)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	l = len(m.BaseledgerBusinessObjectID)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	l = len(m.BusinessObject)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	l = len(m.ReferencedBaseledgerBusinessObjectID)
	if l > 0 {
		n += 1 + l + sovSynchronizationRequest(uint64(l))
	}
	return n
}

func sovSynchronizationRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSynchronizationRequest(x uint64) (n int) {
	return sovSynchronizationRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SynchronizationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSynchronizationRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SynchronizationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SynchronizationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkgroupID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkgroupID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkstepType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkstepType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObjectType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseledgerBusinessObjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseledgerBusinessObjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReferencedBaseledgerBusinessObjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReferencedBaseledgerBusinessObjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSynchronizationRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSynchronizationRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSynchronizationRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSynchronizationRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSynchronizationRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSynchronizationRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSynchronizationRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSynchronizationRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSynchronizationRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSynchronizationRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSynchronizationRequest = fmt.Errorf("proto: unexpected end of group")
)
