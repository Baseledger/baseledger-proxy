// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: trustmesh/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateSynchronizationFeedback struct {
	Creator                                    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Approved                                   string `protobuf:"bytes,2,opt,name=Approved,proto3" json:"Approved,omitempty"`
	BusinessObject                             string `protobuf:"bytes,3,opt,name=BusinessObject,proto3" json:"BusinessObject,omitempty"`
	BaseledgerBusinessObjectIDOfApprovedObject string `protobuf:"bytes,4,opt,name=BaseledgerBusinessObjectIDOfApprovedObject,proto3" json:"BaseledgerBusinessObjectIDOfApprovedObject,omitempty"`
	Workgroup                                  string `protobuf:"bytes,5,opt,name=Workgroup,proto3" json:"Workgroup,omitempty"`
	Recipient                                  string `protobuf:"bytes,6,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	HashOfObjectToApprove                      string `protobuf:"bytes,7,opt,name=HashOfObjectToApprove,proto3" json:"HashOfObjectToApprove,omitempty"`
	OriginalBaseledgerTransactionID            string `protobuf:"bytes,8,opt,name=OriginalBaseledgerTransactionID,proto3" json:"OriginalBaseledgerTransactionID,omitempty"`
	OriginalOffchainProcessMessageID           string `protobuf:"bytes,9,opt,name=OriginalOffchainProcessMessageID,proto3" json:"OriginalOffchainProcessMessageID,omitempty"`
	FeedbackMessage                            string `protobuf:"bytes,10,opt,name=FeedbackMessage,proto3" json:"FeedbackMessage,omitempty"`
}

func (m *MsgCreateSynchronizationFeedback) Reset()         { *m = MsgCreateSynchronizationFeedback{} }
func (m *MsgCreateSynchronizationFeedback) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSynchronizationFeedback) ProtoMessage()    {}
func (*MsgCreateSynchronizationFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{0}
}
func (m *MsgCreateSynchronizationFeedback) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSynchronizationFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSynchronizationFeedback.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSynchronizationFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSynchronizationFeedback.Merge(m, src)
}
func (m *MsgCreateSynchronizationFeedback) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSynchronizationFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSynchronizationFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSynchronizationFeedback proto.InternalMessageInfo

func (m *MsgCreateSynchronizationFeedback) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetApproved() string {
	if m != nil {
		return m.Approved
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetBusinessObject() string {
	if m != nil {
		return m.BusinessObject
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetBaseledgerBusinessObjectIDOfApprovedObject() string {
	if m != nil {
		return m.BaseledgerBusinessObjectIDOfApprovedObject
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetWorkgroup() string {
	if m != nil {
		return m.Workgroup
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetHashOfObjectToApprove() string {
	if m != nil {
		return m.HashOfObjectToApprove
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetOriginalBaseledgerTransactionID() string {
	if m != nil {
		return m.OriginalBaseledgerTransactionID
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetOriginalOffchainProcessMessageID() string {
	if m != nil {
		return m.OriginalOffchainProcessMessageID
	}
	return ""
}

func (m *MsgCreateSynchronizationFeedback) GetFeedbackMessage() string {
	if m != nil {
		return m.FeedbackMessage
	}
	return ""
}

type MsgCreateSynchronizationFeedbackResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSynchronizationFeedbackResponse) Reset() {
	*m = MsgCreateSynchronizationFeedbackResponse{}
}
func (m *MsgCreateSynchronizationFeedbackResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSynchronizationFeedbackResponse) ProtoMessage()    {}
func (*MsgCreateSynchronizationFeedbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{1}
}
func (m *MsgCreateSynchronizationFeedbackResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSynchronizationFeedbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSynchronizationFeedbackResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSynchronizationFeedbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSynchronizationFeedbackResponse.Merge(m, src)
}
func (m *MsgCreateSynchronizationFeedbackResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSynchronizationFeedbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSynchronizationFeedbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSynchronizationFeedbackResponse proto.InternalMessageInfo

func (m *MsgCreateSynchronizationFeedbackResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSynchronizationFeedback struct {
	Creator                                    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                                         uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Approved                                   string `protobuf:"bytes,3,opt,name=Approved,proto3" json:"Approved,omitempty"`
	BusinessObject                             string `protobuf:"bytes,4,opt,name=BusinessObject,proto3" json:"BusinessObject,omitempty"`
	BaseledgerBusinessObjectIDOfApprovedObject string `protobuf:"bytes,5,opt,name=BaseledgerBusinessObjectIDOfApprovedObject,proto3" json:"BaseledgerBusinessObjectIDOfApprovedObject,omitempty"`
	Workgroup                                  string `protobuf:"bytes,6,opt,name=Workgroup,proto3" json:"Workgroup,omitempty"`
	Recipient                                  string `protobuf:"bytes,7,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	HashOfObjectToApprove                      string `protobuf:"bytes,8,opt,name=HashOfObjectToApprove,proto3" json:"HashOfObjectToApprove,omitempty"`
	OriginalBaseledgerTransactionID            string `protobuf:"bytes,9,opt,name=OriginalBaseledgerTransactionID,proto3" json:"OriginalBaseledgerTransactionID,omitempty"`
	OriginalOffchainProcessMessageID           string `protobuf:"bytes,10,opt,name=OriginalOffchainProcessMessageID,proto3" json:"OriginalOffchainProcessMessageID,omitempty"`
	FeedbackMessage                            string `protobuf:"bytes,11,opt,name=FeedbackMessage,proto3" json:"FeedbackMessage,omitempty"`
}

func (m *MsgUpdateSynchronizationFeedback) Reset()         { *m = MsgUpdateSynchronizationFeedback{} }
func (m *MsgUpdateSynchronizationFeedback) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSynchronizationFeedback) ProtoMessage()    {}
func (*MsgUpdateSynchronizationFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{2}
}
func (m *MsgUpdateSynchronizationFeedback) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSynchronizationFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSynchronizationFeedback.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSynchronizationFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSynchronizationFeedback.Merge(m, src)
}
func (m *MsgUpdateSynchronizationFeedback) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSynchronizationFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSynchronizationFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSynchronizationFeedback proto.InternalMessageInfo

func (m *MsgUpdateSynchronizationFeedback) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSynchronizationFeedback) GetApproved() string {
	if m != nil {
		return m.Approved
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetBusinessObject() string {
	if m != nil {
		return m.BusinessObject
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetBaseledgerBusinessObjectIDOfApprovedObject() string {
	if m != nil {
		return m.BaseledgerBusinessObjectIDOfApprovedObject
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetWorkgroup() string {
	if m != nil {
		return m.Workgroup
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetHashOfObjectToApprove() string {
	if m != nil {
		return m.HashOfObjectToApprove
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetOriginalBaseledgerTransactionID() string {
	if m != nil {
		return m.OriginalBaseledgerTransactionID
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetOriginalOffchainProcessMessageID() string {
	if m != nil {
		return m.OriginalOffchainProcessMessageID
	}
	return ""
}

func (m *MsgUpdateSynchronizationFeedback) GetFeedbackMessage() string {
	if m != nil {
		return m.FeedbackMessage
	}
	return ""
}

type MsgUpdateSynchronizationFeedbackResponse struct {
}

func (m *MsgUpdateSynchronizationFeedbackResponse) Reset() {
	*m = MsgUpdateSynchronizationFeedbackResponse{}
}
func (m *MsgUpdateSynchronizationFeedbackResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSynchronizationFeedbackResponse) ProtoMessage()    {}
func (*MsgUpdateSynchronizationFeedbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{3}
}
func (m *MsgUpdateSynchronizationFeedbackResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSynchronizationFeedbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSynchronizationFeedbackResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSynchronizationFeedbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSynchronizationFeedbackResponse.Merge(m, src)
}
func (m *MsgUpdateSynchronizationFeedbackResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSynchronizationFeedbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSynchronizationFeedbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSynchronizationFeedbackResponse proto.InternalMessageInfo

type MsgDeleteSynchronizationFeedback struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSynchronizationFeedback) Reset()         { *m = MsgDeleteSynchronizationFeedback{} }
func (m *MsgDeleteSynchronizationFeedback) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSynchronizationFeedback) ProtoMessage()    {}
func (*MsgDeleteSynchronizationFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{4}
}
func (m *MsgDeleteSynchronizationFeedback) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSynchronizationFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSynchronizationFeedback.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSynchronizationFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSynchronizationFeedback.Merge(m, src)
}
func (m *MsgDeleteSynchronizationFeedback) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSynchronizationFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSynchronizationFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSynchronizationFeedback proto.InternalMessageInfo

func (m *MsgDeleteSynchronizationFeedback) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSynchronizationFeedback) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSynchronizationFeedbackResponse struct {
}

func (m *MsgDeleteSynchronizationFeedbackResponse) Reset() {
	*m = MsgDeleteSynchronizationFeedbackResponse{}
}
func (m *MsgDeleteSynchronizationFeedbackResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSynchronizationFeedbackResponse) ProtoMessage()    {}
func (*MsgDeleteSynchronizationFeedbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{5}
}
func (m *MsgDeleteSynchronizationFeedbackResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSynchronizationFeedbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSynchronizationFeedbackResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSynchronizationFeedbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSynchronizationFeedbackResponse.Merge(m, src)
}
func (m *MsgDeleteSynchronizationFeedbackResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSynchronizationFeedbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSynchronizationFeedbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSynchronizationFeedbackResponse proto.InternalMessageInfo

type MsgCreateSynchronizationRequest struct {
	Creator                              string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	WorkgroupID                          string `protobuf:"bytes,2,opt,name=WorkgroupID,proto3" json:"WorkgroupID,omitempty"`
	Recipient                            string `protobuf:"bytes,3,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	WorkstepType                         string `protobuf:"bytes,4,opt,name=WorkstepType,proto3" json:"WorkstepType,omitempty"`
	BusinessObjectType                   string `protobuf:"bytes,5,opt,name=BusinessObjectType,proto3" json:"BusinessObjectType,omitempty"`
	BaseledgerBusinessObjectID           string `protobuf:"bytes,6,opt,name=BaseledgerBusinessObjectID,proto3" json:"BaseledgerBusinessObjectID,omitempty"`
	BusinessObject                       string `protobuf:"bytes,7,opt,name=BusinessObject,proto3" json:"BusinessObject,omitempty"`
	ReferencedBaseledgerBusinessObjectID string `protobuf:"bytes,8,opt,name=ReferencedBaseledgerBusinessObjectID,proto3" json:"ReferencedBaseledgerBusinessObjectID,omitempty"`
}

func (m *MsgCreateSynchronizationRequest) Reset()         { *m = MsgCreateSynchronizationRequest{} }
func (m *MsgCreateSynchronizationRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSynchronizationRequest) ProtoMessage()    {}
func (*MsgCreateSynchronizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{6}
}
func (m *MsgCreateSynchronizationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSynchronizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSynchronizationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSynchronizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSynchronizationRequest.Merge(m, src)
}
func (m *MsgCreateSynchronizationRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSynchronizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSynchronizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSynchronizationRequest proto.InternalMessageInfo

func (m *MsgCreateSynchronizationRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSynchronizationRequest) GetWorkgroupID() string {
	if m != nil {
		return m.WorkgroupID
	}
	return ""
}

func (m *MsgCreateSynchronizationRequest) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgCreateSynchronizationRequest) GetWorkstepType() string {
	if m != nil {
		return m.WorkstepType
	}
	return ""
}

func (m *MsgCreateSynchronizationRequest) GetBusinessObjectType() string {
	if m != nil {
		return m.BusinessObjectType
	}
	return ""
}

func (m *MsgCreateSynchronizationRequest) GetBaseledgerBusinessObjectID() string {
	if m != nil {
		return m.BaseledgerBusinessObjectID
	}
	return ""
}

func (m *MsgCreateSynchronizationRequest) GetBusinessObject() string {
	if m != nil {
		return m.BusinessObject
	}
	return ""
}

func (m *MsgCreateSynchronizationRequest) GetReferencedBaseledgerBusinessObjectID() string {
	if m != nil {
		return m.ReferencedBaseledgerBusinessObjectID
	}
	return ""
}

type MsgCreateSynchronizationRequestResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSynchronizationRequestResponse) Reset() {
	*m = MsgCreateSynchronizationRequestResponse{}
}
func (m *MsgCreateSynchronizationRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSynchronizationRequestResponse) ProtoMessage()    {}
func (*MsgCreateSynchronizationRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{7}
}
func (m *MsgCreateSynchronizationRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSynchronizationRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSynchronizationRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSynchronizationRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSynchronizationRequestResponse.Merge(m, src)
}
func (m *MsgCreateSynchronizationRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSynchronizationRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSynchronizationRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSynchronizationRequestResponse proto.InternalMessageInfo

func (m *MsgCreateSynchronizationRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSynchronizationRequest struct {
	Creator                              string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                                   uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	WorkgroupID                          string `protobuf:"bytes,3,opt,name=WorkgroupID,proto3" json:"WorkgroupID,omitempty"`
	Recipient                            string `protobuf:"bytes,4,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	WorkstepType                         string `protobuf:"bytes,5,opt,name=WorkstepType,proto3" json:"WorkstepType,omitempty"`
	BusinessObjectType                   string `protobuf:"bytes,6,opt,name=BusinessObjectType,proto3" json:"BusinessObjectType,omitempty"`
	BaseledgerBusinessObjectID           string `protobuf:"bytes,7,opt,name=BaseledgerBusinessObjectID,proto3" json:"BaseledgerBusinessObjectID,omitempty"`
	BusinessObject                       string `protobuf:"bytes,8,opt,name=BusinessObject,proto3" json:"BusinessObject,omitempty"`
	ReferencedBaseledgerBusinessObjectID string `protobuf:"bytes,9,opt,name=ReferencedBaseledgerBusinessObjectID,proto3" json:"ReferencedBaseledgerBusinessObjectID,omitempty"`
}

func (m *MsgUpdateSynchronizationRequest) Reset()         { *m = MsgUpdateSynchronizationRequest{} }
func (m *MsgUpdateSynchronizationRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSynchronizationRequest) ProtoMessage()    {}
func (*MsgUpdateSynchronizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{8}
}
func (m *MsgUpdateSynchronizationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSynchronizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSynchronizationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSynchronizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSynchronizationRequest.Merge(m, src)
}
func (m *MsgUpdateSynchronizationRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSynchronizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSynchronizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSynchronizationRequest proto.InternalMessageInfo

func (m *MsgUpdateSynchronizationRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSynchronizationRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSynchronizationRequest) GetWorkgroupID() string {
	if m != nil {
		return m.WorkgroupID
	}
	return ""
}

func (m *MsgUpdateSynchronizationRequest) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgUpdateSynchronizationRequest) GetWorkstepType() string {
	if m != nil {
		return m.WorkstepType
	}
	return ""
}

func (m *MsgUpdateSynchronizationRequest) GetBusinessObjectType() string {
	if m != nil {
		return m.BusinessObjectType
	}
	return ""
}

func (m *MsgUpdateSynchronizationRequest) GetBaseledgerBusinessObjectID() string {
	if m != nil {
		return m.BaseledgerBusinessObjectID
	}
	return ""
}

func (m *MsgUpdateSynchronizationRequest) GetBusinessObject() string {
	if m != nil {
		return m.BusinessObject
	}
	return ""
}

func (m *MsgUpdateSynchronizationRequest) GetReferencedBaseledgerBusinessObjectID() string {
	if m != nil {
		return m.ReferencedBaseledgerBusinessObjectID
	}
	return ""
}

type MsgUpdateSynchronizationRequestResponse struct {
}

func (m *MsgUpdateSynchronizationRequestResponse) Reset() {
	*m = MsgUpdateSynchronizationRequestResponse{}
}
func (m *MsgUpdateSynchronizationRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSynchronizationRequestResponse) ProtoMessage()    {}
func (*MsgUpdateSynchronizationRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{9}
}
func (m *MsgUpdateSynchronizationRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSynchronizationRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSynchronizationRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSynchronizationRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSynchronizationRequestResponse.Merge(m, src)
}
func (m *MsgUpdateSynchronizationRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSynchronizationRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSynchronizationRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSynchronizationRequestResponse proto.InternalMessageInfo

type MsgDeleteSynchronizationRequest struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSynchronizationRequest) Reset()         { *m = MsgDeleteSynchronizationRequest{} }
func (m *MsgDeleteSynchronizationRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSynchronizationRequest) ProtoMessage()    {}
func (*MsgDeleteSynchronizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{10}
}
func (m *MsgDeleteSynchronizationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSynchronizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSynchronizationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSynchronizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSynchronizationRequest.Merge(m, src)
}
func (m *MsgDeleteSynchronizationRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSynchronizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSynchronizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSynchronizationRequest proto.InternalMessageInfo

func (m *MsgDeleteSynchronizationRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSynchronizationRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSynchronizationRequestResponse struct {
}

func (m *MsgDeleteSynchronizationRequestResponse) Reset() {
	*m = MsgDeleteSynchronizationRequestResponse{}
}
func (m *MsgDeleteSynchronizationRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSynchronizationRequestResponse) ProtoMessage()    {}
func (*MsgDeleteSynchronizationRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a38629790ad48450, []int{11}
}
func (m *MsgDeleteSynchronizationRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSynchronizationRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSynchronizationRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSynchronizationRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSynchronizationRequestResponse.Merge(m, src)
}
func (m *MsgDeleteSynchronizationRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSynchronizationRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSynchronizationRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSynchronizationRequestResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateSynchronizationFeedback)(nil), "example.baseledger.trustmesh.MsgCreateSynchronizationFeedback")
	proto.RegisterType((*MsgCreateSynchronizationFeedbackResponse)(nil), "example.baseledger.trustmesh.MsgCreateSynchronizationFeedbackResponse")
	proto.RegisterType((*MsgUpdateSynchronizationFeedback)(nil), "example.baseledger.trustmesh.MsgUpdateSynchronizationFeedback")
	proto.RegisterType((*MsgUpdateSynchronizationFeedbackResponse)(nil), "example.baseledger.trustmesh.MsgUpdateSynchronizationFeedbackResponse")
	proto.RegisterType((*MsgDeleteSynchronizationFeedback)(nil), "example.baseledger.trustmesh.MsgDeleteSynchronizationFeedback")
	proto.RegisterType((*MsgDeleteSynchronizationFeedbackResponse)(nil), "example.baseledger.trustmesh.MsgDeleteSynchronizationFeedbackResponse")
	proto.RegisterType((*MsgCreateSynchronizationRequest)(nil), "example.baseledger.trustmesh.MsgCreateSynchronizationRequest")
	proto.RegisterType((*MsgCreateSynchronizationRequestResponse)(nil), "example.baseledger.trustmesh.MsgCreateSynchronizationRequestResponse")
	proto.RegisterType((*MsgUpdateSynchronizationRequest)(nil), "example.baseledger.trustmesh.MsgUpdateSynchronizationRequest")
	proto.RegisterType((*MsgUpdateSynchronizationRequestResponse)(nil), "example.baseledger.trustmesh.MsgUpdateSynchronizationRequestResponse")
	proto.RegisterType((*MsgDeleteSynchronizationRequest)(nil), "example.baseledger.trustmesh.MsgDeleteSynchronizationRequest")
	proto.RegisterType((*MsgDeleteSynchronizationRequestResponse)(nil), "example.baseledger.trustmesh.MsgDeleteSynchronizationRequestResponse")
}

func init() { proto.RegisterFile("trustmesh/tx.proto", fileDescriptor_a38629790ad48450) }

var fileDescriptor_a38629790ad48450 = []byte{
	// 741 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x97, 0x4d, 0x6b, 0x13, 0x5d,
	0x14, 0xc7, 0x3b, 0x49, 0x9a, 0x97, 0xd3, 0x87, 0x3e, 0x70, 0x41, 0x18, 0x42, 0x4d, 0x43, 0x10,
	0xad, 0x5d, 0x4c, 0x40, 0xdd, 0x28, 0xb4, 0x60, 0x8d, 0xa5, 0x51, 0x4b, 0x64, 0xac, 0x08, 0x2e,
	0x84, 0xc9, 0xcc, 0xc9, 0x64, 0x6c, 0x3a, 0x77, 0xbc, 0x77, 0x22, 0xad, 0x5f, 0xc1, 0x8d, 0xb8,
	0x75, 0x27, 0x82, 0x5f, 0xc5, 0x65, 0x97, 0x2e, 0xa5, 0xfd, 0x12, 0x2e, 0x25, 0x77, 0x5e, 0xda,
	0x84, 0xe9, 0x9d, 0xe9, 0x24, 0xcb, 0x39, 0xf7, 0xbc, 0x31, 0xff, 0xdf, 0x39, 0x77, 0x06, 0x88,
	0xcf, 0xc6, 0xdc, 0x3f, 0x42, 0x3e, 0x6c, 0xfb, 0xc7, 0x9a, 0xc7, 0xa8, 0x4f, 0xc9, 0x1a, 0x1e,
	0x1b, 0x47, 0xde, 0x08, 0xb5, 0xbe, 0xc1, 0x71, 0x84, 0x96, 0x8d, 0x4c, 0x8b, 0xdd, 0x5a, 0x5f,
	0x4b, 0xd0, 0xdc, 0xe7, 0xf6, 0x13, 0x86, 0x86, 0x8f, 0xaf, 0x4e, 0x5c, 0x73, 0xc8, 0xa8, 0xeb,
	0x7c, 0x32, 0x7c, 0x87, 0xba, 0xbb, 0x88, 0x56, 0xdf, 0x30, 0x0f, 0x89, 0x0a, 0x15, 0x73, 0xe2,
	0x40, 0x99, 0xaa, 0x34, 0x95, 0x8d, 0x9a, 0x1e, 0x3d, 0x92, 0x3a, 0x54, 0x1f, 0x7b, 0x1e, 0xa3,
	0x1f, 0xd1, 0x52, 0x0b, 0xe2, 0x28, 0x7e, 0x26, 0xb7, 0x61, 0x75, 0x67, 0xcc, 0x1d, 0x17, 0x39,
	0xef, 0xf5, 0xdf, 0xa3, 0xe9, 0xab, 0x45, 0xe1, 0x31, 0x63, 0x25, 0xef, 0x60, 0x73, 0x27, 0x6e,
	0x6d, 0xfa, 0xac, 0xdb, 0xe9, 0x0d, 0xa2, 0x7c, 0x61, 0x8e, 0x92, 0xc8, 0x71, 0x8d, 0x08, 0xb2,
	0x06, 0xb5, 0x37, 0x94, 0x1d, 0xda, 0x8c, 0x8e, 0x3d, 0x75, 0x59, 0x84, 0x5f, 0x18, 0x26, 0xa7,
	0x3a, 0x9a, 0x8e, 0xe7, 0xa0, 0xeb, 0xab, 0xe5, 0xe0, 0x34, 0x36, 0x90, 0x07, 0x70, 0x63, 0xcf,
	0xe0, 0xc3, 0xde, 0x20, 0xc8, 0x75, 0x40, 0xc3, 0xdc, 0x6a, 0x45, 0x78, 0x26, 0x1f, 0x92, 0x3d,
	0x58, 0xef, 0x31, 0xc7, 0x76, 0x5c, 0x63, 0x74, 0xd1, 0xe7, 0x01, 0x33, 0x5c, 0x6e, 0x98, 0x93,
	0x17, 0xdb, 0xed, 0xa8, 0x55, 0x11, 0x9f, 0xe6, 0x46, 0x9e, 0x41, 0x33, 0x72, 0xe9, 0x0d, 0x06,
	0xe6, 0xd0, 0x70, 0xdc, 0x97, 0x8c, 0x9a, 0xc8, 0xf9, 0x3e, 0x72, 0x6e, 0xd8, 0xd8, 0xed, 0xa8,
	0x35, 0x91, 0x2a, 0xd5, 0x8f, 0x6c, 0xc0, 0xff, 0x91, 0xa2, 0xa1, 0x51, 0x05, 0x11, 0x3a, 0x6b,
	0x6e, 0x3d, 0x82, 0x8d, 0x34, 0x26, 0x74, 0xe4, 0x1e, 0x75, 0x39, 0x92, 0x55, 0x28, 0x38, 0x96,
	0xc0, 0xa2, 0xa4, 0x17, 0x1c, 0xab, 0xf5, 0x3d, 0x00, 0xea, 0xb5, 0x67, 0xe5, 0x02, 0x2a, 0x48,
	0x57, 0x88, 0xd2, 0x4d, 0x01, 0x56, 0x4c, 0x05, 0xac, 0xb4, 0x00, 0xc0, 0x96, 0xe7, 0x03, 0xac,
	0x2c, 0x05, 0xac, 0x92, 0x19, 0xb0, 0xea, 0x9c, 0x80, 0xd5, 0x16, 0x07, 0x18, 0xe4, 0x07, 0x6c,
	0x25, 0x19, 0xb0, 0x4d, 0x01, 0x98, 0x94, 0x91, 0x08, 0xb0, 0xd6, 0x0b, 0xc1, 0x53, 0x07, 0x47,
	0xb8, 0x00, 0x9e, 0xc2, 0xca, 0xd2, 0x6c, 0x71, 0xe5, 0xcf, 0x45, 0x58, 0xbf, 0x6a, 0x0e, 0x74,
	0xfc, 0x30, 0x46, 0xee, 0x4b, 0x2a, 0x37, 0x61, 0x25, 0x86, 0xa0, 0xdb, 0x09, 0xb7, 0xe3, 0x65,
	0xd3, 0x34, 0x19, 0xc5, 0x59, 0x32, 0x5a, 0xf0, 0xdf, 0xc4, 0x99, 0xfb, 0xe8, 0x1d, 0x9c, 0x78,
	0x18, 0xb2, 0x3d, 0x65, 0x23, 0x1a, 0x90, 0x69, 0x3a, 0x85, 0x67, 0x40, 0x70, 0xc2, 0x09, 0xd9,
	0x86, 0xfa, 0xd5, 0x5c, 0x87, 0xe8, 0x4a, 0x3c, 0x12, 0x26, 0xae, 0x92, 0x38, 0x71, 0x3a, 0xdc,
	0xd2, 0x71, 0x80, 0x0c, 0x5d, 0x13, 0x2d, 0x49, 0xc5, 0x00, 0xf2, 0x4c, 0xbe, 0xad, 0x87, 0x70,
	0x27, 0x45, 0x8c, 0x2b, 0x77, 0xd2, 0xb7, 0x40, 0xc8, 0x44, 0xde, 0xd2, 0x85, 0x9c, 0x5d, 0x49,
	0x33, 0xc2, 0x16, 0x53, 0x84, 0x2d, 0xa5, 0x09, 0xbb, 0x9c, 0x59, 0xd8, 0x72, 0x4e, 0x61, 0x2b,
	0x39, 0x84, 0xad, 0xce, 0x25, 0x6c, 0xed, 0x1a, 0xc2, 0xde, 0x15, 0xc2, 0xca, 0xc4, 0x89, 0x27,
	0xf2, 0xb9, 0xd0, 0x31, 0x71, 0x7a, 0xaf, 0xad, 0x63, 0x58, 0x57, 0x96, 0x2c, 0xaa, 0x7b, 0xef,
	0x6f, 0x05, 0x8a, 0xfb, 0xdc, 0x26, 0x3f, 0x15, 0xb8, 0x29, 0xff, 0x54, 0xda, 0xd6, 0x64, 0x9f,
	0x5b, 0x5a, 0xda, 0xb5, 0x5a, 0xdf, 0x9d, 0x2f, 0x3e, 0x1e, 0x81, 0x49, 0xa7, 0xf2, 0x3b, 0x38,
	0xbd, 0x53, 0x69, 0x7c, 0x86, 0x4e, 0x33, 0xed, 0x77, 0xd1, 0xa9, 0x7c, 0xbb, 0xa7, 0x77, 0x2a,
	0x8d, 0xcf, 0xd0, 0x69, 0xa6, 0xfb, 0x80, 0xfc, 0x50, 0x60, 0x4d, 0x7a, 0x19, 0x6c, 0xe5, 0x13,
	0x2f, 0x0c, 0xaf, 0x3f, 0x9d, 0x2b, 0x7c, 0xaa, 0x4d, 0xe9, 0xaa, 0xdb, 0xca, 0xa7, 0x5c, 0xf6,
	0x36, 0xb3, 0xcc, 0xb2, 0x68, 0x53, 0x3a, 0xc9, 0x5b, 0xf9, 0x64, 0xcb, 0xde, 0x66, 0x96, 0xd1,
	0xdf, 0xe9, 0xfe, 0x3a, 0x6b, 0x28, 0xa7, 0x67, 0x0d, 0xe5, 0xcf, 0x59, 0x43, 0xf9, 0x72, 0xde,
	0x58, 0x3a, 0x3d, 0x6f, 0x2c, 0xfd, 0x3e, 0x6f, 0x2c, 0xbd, 0x6d, 0xdb, 0x8e, 0x3f, 0x1c, 0xf7,
	0x35, 0x93, 0x1e, 0xb5, 0xc3, 0x52, 0xed, 0x8b, 0x52, 0xed, 0xe3, 0xf6, 0xa5, 0x9f, 0xb1, 0x13,
	0x0f, 0x79, 0xbf, 0x2c, 0x7e, 0xc8, 0xee, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x54, 0x9b, 0x02,
	0xa4, 0xa6, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateSynchronizationFeedback(ctx context.Context, in *MsgCreateSynchronizationFeedback, opts ...grpc.CallOption) (*MsgCreateSynchronizationFeedbackResponse, error)
	UpdateSynchronizationFeedback(ctx context.Context, in *MsgUpdateSynchronizationFeedback, opts ...grpc.CallOption) (*MsgUpdateSynchronizationFeedbackResponse, error)
	DeleteSynchronizationFeedback(ctx context.Context, in *MsgDeleteSynchronizationFeedback, opts ...grpc.CallOption) (*MsgDeleteSynchronizationFeedbackResponse, error)
	CreateSynchronizationRequest(ctx context.Context, in *MsgCreateSynchronizationRequest, opts ...grpc.CallOption) (*MsgCreateSynchronizationRequestResponse, error)
	UpdateSynchronizationRequest(ctx context.Context, in *MsgUpdateSynchronizationRequest, opts ...grpc.CallOption) (*MsgUpdateSynchronizationRequestResponse, error)
	DeleteSynchronizationRequest(ctx context.Context, in *MsgDeleteSynchronizationRequest, opts ...grpc.CallOption) (*MsgDeleteSynchronizationRequestResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateSynchronizationFeedback(ctx context.Context, in *MsgCreateSynchronizationFeedback, opts ...grpc.CallOption) (*MsgCreateSynchronizationFeedbackResponse, error) {
	out := new(MsgCreateSynchronizationFeedbackResponse)
	err := c.cc.Invoke(ctx, "/example.baseledger.trustmesh.Msg/CreateSynchronizationFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSynchronizationFeedback(ctx context.Context, in *MsgUpdateSynchronizationFeedback, opts ...grpc.CallOption) (*MsgUpdateSynchronizationFeedbackResponse, error) {
	out := new(MsgUpdateSynchronizationFeedbackResponse)
	err := c.cc.Invoke(ctx, "/example.baseledger.trustmesh.Msg/UpdateSynchronizationFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSynchronizationFeedback(ctx context.Context, in *MsgDeleteSynchronizationFeedback, opts ...grpc.CallOption) (*MsgDeleteSynchronizationFeedbackResponse, error) {
	out := new(MsgDeleteSynchronizationFeedbackResponse)
	err := c.cc.Invoke(ctx, "/example.baseledger.trustmesh.Msg/DeleteSynchronizationFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSynchronizationRequest(ctx context.Context, in *MsgCreateSynchronizationRequest, opts ...grpc.CallOption) (*MsgCreateSynchronizationRequestResponse, error) {
	out := new(MsgCreateSynchronizationRequestResponse)
	err := c.cc.Invoke(ctx, "/example.baseledger.trustmesh.Msg/CreateSynchronizationRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSynchronizationRequest(ctx context.Context, in *MsgUpdateSynchronizationRequest, opts ...grpc.CallOption) (*MsgUpdateSynchronizationRequestResponse, error) {
	out := new(MsgUpdateSynchronizationRequestResponse)
	err := c.cc.Invoke(ctx, "/example.baseledger.trustmesh.Msg/UpdateSynchronizationRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSynchronizationRequest(ctx context.Context, in *MsgDeleteSynchronizationRequest, opts ...grpc.CallOption) (*MsgDeleteSynchronizationRequestResponse, error) {
	out := new(MsgDeleteSynchronizationRequestResponse)
	err := c.cc.Invoke(ctx, "/example.baseledger.trustmesh.Msg/DeleteSynchronizationRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateSynchronizationFeedback(context.Context, *MsgCreateSynchronizationFeedback) (*MsgCreateSynchronizationFeedbackResponse, error)
	UpdateSynchronizationFeedback(context.Context, *MsgUpdateSynchronizationFeedback) (*MsgUpdateSynchronizationFeedbackResponse, error)
	DeleteSynchronizationFeedback(context.Context, *MsgDeleteSynchronizationFeedback) (*MsgDeleteSynchronizationFeedbackResponse, error)
	CreateSynchronizationRequest(context.Context, *MsgCreateSynchronizationRequest) (*MsgCreateSynchronizationRequestResponse, error)
	UpdateSynchronizationRequest(context.Context, *MsgUpdateSynchronizationRequest) (*MsgUpdateSynchronizationRequestResponse, error)
	DeleteSynchronizationRequest(context.Context, *MsgDeleteSynchronizationRequest) (*MsgDeleteSynchronizationRequestResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateSynchronizationFeedback(ctx context.Context, req *MsgCreateSynchronizationFeedback) (*MsgCreateSynchronizationFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSynchronizationFeedback not implemented")
}
func (*UnimplementedMsgServer) UpdateSynchronizationFeedback(ctx context.Context, req *MsgUpdateSynchronizationFeedback) (*MsgUpdateSynchronizationFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSynchronizationFeedback not implemented")
}
func (*UnimplementedMsgServer) DeleteSynchronizationFeedback(ctx context.Context, req *MsgDeleteSynchronizationFeedback) (*MsgDeleteSynchronizationFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSynchronizationFeedback not implemented")
}
func (*UnimplementedMsgServer) CreateSynchronizationRequest(ctx context.Context, req *MsgCreateSynchronizationRequest) (*MsgCreateSynchronizationRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSynchronizationRequest not implemented")
}
func (*UnimplementedMsgServer) UpdateSynchronizationRequest(ctx context.Context, req *MsgUpdateSynchronizationRequest) (*MsgUpdateSynchronizationRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSynchronizationRequest not implemented")
}
func (*UnimplementedMsgServer) DeleteSynchronizationRequest(ctx context.Context, req *MsgDeleteSynchronizationRequest) (*MsgDeleteSynchronizationRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSynchronizationRequest not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateSynchronizationFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSynchronizationFeedback)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSynchronizationFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.baseledger.trustmesh.Msg/CreateSynchronizationFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSynchronizationFeedback(ctx, req.(*MsgCreateSynchronizationFeedback))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSynchronizationFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSynchronizationFeedback)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSynchronizationFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.baseledger.trustmesh.Msg/UpdateSynchronizationFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSynchronizationFeedback(ctx, req.(*MsgUpdateSynchronizationFeedback))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSynchronizationFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSynchronizationFeedback)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSynchronizationFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.baseledger.trustmesh.Msg/DeleteSynchronizationFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSynchronizationFeedback(ctx, req.(*MsgDeleteSynchronizationFeedback))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSynchronizationRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSynchronizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSynchronizationRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.baseledger.trustmesh.Msg/CreateSynchronizationRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSynchronizationRequest(ctx, req.(*MsgCreateSynchronizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSynchronizationRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSynchronizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSynchronizationRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.baseledger.trustmesh.Msg/UpdateSynchronizationRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSynchronizationRequest(ctx, req.(*MsgUpdateSynchronizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSynchronizationRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSynchronizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSynchronizationRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.baseledger.trustmesh.Msg/DeleteSynchronizationRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSynchronizationRequest(ctx, req.(*MsgDeleteSynchronizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.baseledger.trustmesh.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSynchronizationFeedback",
			Handler:    _Msg_CreateSynchronizationFeedback_Handler,
		},
		{
			MethodName: "UpdateSynchronizationFeedback",
			Handler:    _Msg_UpdateSynchronizationFeedback_Handler,
		},
		{
			MethodName: "DeleteSynchronizationFeedback",
			Handler:    _Msg_DeleteSynchronizationFeedback_Handler,
		},
		{
			MethodName: "CreateSynchronizationRequest",
			Handler:    _Msg_CreateSynchronizationRequest_Handler,
		},
		{
			MethodName: "UpdateSynchronizationRequest",
			Handler:    _Msg_UpdateSynchronizationRequest_Handler,
		},
		{
			MethodName: "DeleteSynchronizationRequest",
			Handler:    _Msg_DeleteSynchronizationRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trustmesh/tx.proto",
}

func (m *MsgCreateSynchronizationFeedback) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSynchronizationFeedback) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSynchronizationFeedback) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FeedbackMessage) > 0 {
		i -= len(m.FeedbackMessage)
		copy(dAtA[i:], m.FeedbackMessage)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FeedbackMessage)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.OriginalOffchainProcessMessageID) > 0 {
		i -= len(m.OriginalOffchainProcessMessageID)
		copy(dAtA[i:], m.OriginalOffchainProcessMessageID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OriginalOffchainProcessMessageID)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.OriginalBaseledgerTransactionID) > 0 {
		i -= len(m.OriginalBaseledgerTransactionID)
		copy(dAtA[i:], m.OriginalBaseledgerTransactionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OriginalBaseledgerTransactionID)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.HashOfObjectToApprove) > 0 {
		i -= len(m.HashOfObjectToApprove)
		copy(dAtA[i:], m.HashOfObjectToApprove)
		i = encodeVarintTx(dAtA, i, uint64(len(m.HashOfObjectToApprove)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Workgroup) > 0 {
		i -= len(m.Workgroup)
		copy(dAtA[i:], m.Workgroup)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Workgroup)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BaseledgerBusinessObjectIDOfApprovedObject) > 0 {
		i -= len(m.BaseledgerBusinessObjectIDOfApprovedObject)
		copy(dAtA[i:], m.BaseledgerBusinessObjectIDOfApprovedObject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BaseledgerBusinessObjectIDOfApprovedObject)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BusinessObject) > 0 {
		i -= len(m.BusinessObject)
		copy(dAtA[i:], m.BusinessObject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BusinessObject)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Approved) > 0 {
		i -= len(m.Approved)
		copy(dAtA[i:], m.Approved)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Approved)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSynchronizationFeedbackResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSynchronizationFeedbackResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSynchronizationFeedbackResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSynchronizationFeedback) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSynchronizationFeedback) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSynchronizationFeedback) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FeedbackMessage) > 0 {
		i -= len(m.FeedbackMessage)
		copy(dAtA[i:], m.FeedbackMessage)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FeedbackMessage)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.OriginalOffchainProcessMessageID) > 0 {
		i -= len(m.OriginalOffchainProcessMessageID)
		copy(dAtA[i:], m.OriginalOffchainProcessMessageID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OriginalOffchainProcessMessageID)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.OriginalBaseledgerTransactionID) > 0 {
		i -= len(m.OriginalBaseledgerTransactionID)
		copy(dAtA[i:], m.OriginalBaseledgerTransactionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OriginalBaseledgerTransactionID)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.HashOfObjectToApprove) > 0 {
		i -= len(m.HashOfObjectToApprove)
		copy(dAtA[i:], m.HashOfObjectToApprove)
		i = encodeVarintTx(dAtA, i, uint64(len(m.HashOfObjectToApprove)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Workgroup) > 0 {
		i -= len(m.Workgroup)
		copy(dAtA[i:], m.Workgroup)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Workgroup)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BaseledgerBusinessObjectIDOfApprovedObject) > 0 {
		i -= len(m.BaseledgerBusinessObjectIDOfApprovedObject)
		copy(dAtA[i:], m.BaseledgerBusinessObjectIDOfApprovedObject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BaseledgerBusinessObjectIDOfApprovedObject)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BusinessObject) > 0 {
		i -= len(m.BusinessObject)
		copy(dAtA[i:], m.BusinessObject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BusinessObject)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Approved) > 0 {
		i -= len(m.Approved)
		copy(dAtA[i:], m.Approved)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Approved)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSynchronizationFeedbackResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSynchronizationFeedbackResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSynchronizationFeedbackResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSynchronizationFeedback) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSynchronizationFeedback) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSynchronizationFeedback) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSynchronizationFeedbackResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSynchronizationFeedbackResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSynchronizationFeedbackResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSynchronizationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSynchronizationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSynchronizationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ReferencedBaseledgerBusinessObjectID) > 0 {
		i -= len(m.ReferencedBaseledgerBusinessObjectID)
		copy(dAtA[i:], m.ReferencedBaseledgerBusinessObjectID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReferencedBaseledgerBusinessObjectID)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.BusinessObject) > 0 {
		i -= len(m.BusinessObject)
		copy(dAtA[i:], m.BusinessObject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BusinessObject)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BaseledgerBusinessObjectID) > 0 {
		i -= len(m.BaseledgerBusinessObjectID)
		copy(dAtA[i:], m.BaseledgerBusinessObjectID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BaseledgerBusinessObjectID)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BusinessObjectType) > 0 {
		i -= len(m.BusinessObjectType)
		copy(dAtA[i:], m.BusinessObjectType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BusinessObjectType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.WorkstepType) > 0 {
		i -= len(m.WorkstepType)
		copy(dAtA[i:], m.WorkstepType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WorkstepType)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.WorkgroupID) > 0 {
		i -= len(m.WorkgroupID)
		copy(dAtA[i:], m.WorkgroupID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WorkgroupID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSynchronizationRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSynchronizationRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSynchronizationRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSynchronizationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSynchronizationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSynchronizationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ReferencedBaseledgerBusinessObjectID) > 0 {
		i -= len(m.ReferencedBaseledgerBusinessObjectID)
		copy(dAtA[i:], m.ReferencedBaseledgerBusinessObjectID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReferencedBaseledgerBusinessObjectID)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.BusinessObject) > 0 {
		i -= len(m.BusinessObject)
		copy(dAtA[i:], m.BusinessObject)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BusinessObject)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.BaseledgerBusinessObjectID) > 0 {
		i -= len(m.BaseledgerBusinessObjectID)
		copy(dAtA[i:], m.BaseledgerBusinessObjectID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BaseledgerBusinessObjectID)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BusinessObjectType) > 0 {
		i -= len(m.BusinessObjectType)
		copy(dAtA[i:], m.BusinessObjectType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BusinessObjectType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.WorkstepType) > 0 {
		i -= len(m.WorkstepType)
		copy(dAtA[i:], m.WorkstepType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WorkstepType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WorkgroupID) > 0 {
		i -= len(m.WorkgroupID)
		copy(dAtA[i:], m.WorkgroupID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WorkgroupID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSynchronizationRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSynchronizationRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSynchronizationRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSynchronizationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSynchronizationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSynchronizationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSynchronizationRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSynchronizationRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSynchronizationRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateSynchronizationFeedback) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Approved)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BusinessObject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BaseledgerBusinessObjectIDOfApprovedObject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Workgroup)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.HashOfObjectToApprove)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OriginalBaseledgerTransactionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OriginalOffchainProcessMessageID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FeedbackMessage)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSynchronizationFeedbackResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSynchronizationFeedback) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Approved)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BusinessObject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BaseledgerBusinessObjectIDOfApprovedObject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Workgroup)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.HashOfObjectToApprove)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OriginalBaseledgerTransactionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OriginalOffchainProcessMessageID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FeedbackMessage)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSynchronizationFeedbackResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSynchronizationFeedback) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSynchronizationFeedbackResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSynchronizationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WorkgroupID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WorkstepType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BusinessObjectType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BaseledgerBusinessObjectID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BusinessObject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReferencedBaseledgerBusinessObjectID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSynchronizationRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSynchronizationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.WorkgroupID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WorkstepType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BusinessObjectType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BaseledgerBusinessObjectID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BusinessObject)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReferencedBaseledgerBusinessObjectID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSynchronizationRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSynchronizationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSynchronizationRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateSynchronizationFeedback) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSynchronizationFeedback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSynchronizationFeedback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approved", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Approved = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseledgerBusinessObjectIDOfApprovedObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseledgerBusinessObjectIDOfApprovedObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Workgroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Workgroup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashOfObjectToApprove", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HashOfObjectToApprove = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalBaseledgerTransactionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalBaseledgerTransactionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalOffchainProcessMessageID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalOffchainProcessMessageID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedbackMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeedbackMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSynchronizationFeedbackResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSynchronizationFeedbackResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSynchronizationFeedbackResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSynchronizationFeedback) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationFeedback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationFeedback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approved", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Approved = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseledgerBusinessObjectIDOfApprovedObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseledgerBusinessObjectIDOfApprovedObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Workgroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Workgroup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashOfObjectToApprove", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HashOfObjectToApprove = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalBaseledgerTransactionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalBaseledgerTransactionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalOffchainProcessMessageID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalOffchainProcessMessageID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedbackMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeedbackMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSynchronizationFeedbackResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationFeedbackResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationFeedbackResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSynchronizationFeedback) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationFeedback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationFeedback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSynchronizationFeedbackResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationFeedbackResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationFeedbackResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSynchronizationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSynchronizationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSynchronizationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkgroupID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkgroupID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkstepType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkstepType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObjectType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseledgerBusinessObjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseledgerBusinessObjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReferencedBaseledgerBusinessObjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReferencedBaseledgerBusinessObjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSynchronizationRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSynchronizationRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSynchronizationRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSynchronizationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkgroupID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkgroupID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkstepType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkstepType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObjectType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseledgerBusinessObjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseledgerBusinessObjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReferencedBaseledgerBusinessObjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReferencedBaseledgerBusinessObjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSynchronizationRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSynchronizationRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSynchronizationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSynchronizationRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSynchronizationRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
